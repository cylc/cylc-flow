#!/usr/bin/env python

# THIS FILE IS PART OF THE CYLC SUITE ENGINE.
# Copyright (C) 2008-2015 NIWA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]:
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute( force_required=True ):
        sys.exit(0)

from cylc.prompt import prompt
from cylc import cylc_pyro_client
from cylc.CylcOptionParsers import cop, multitask_usage
from cylc.command_prep import prep_pyro
import cylc.flags

parser = cop( """cylc [control] kill [OPTIONS] ARGS

Kill a 'submitted' or 'running' task and update the suite state accordingly.
""" + multitask_usage, pyro=True, multitask=True,
        argdoc=[ ('REG', 'Suite name'),
            ('MATCH', 'Task or family name matching regular expression'),
            ('POINT', 'Task cycle point (e.g. date-time or integer)') ])

(options, args) = parser.parse_args()

suite, pphrase = prep_pyro( args[0], options ).execute()

name = args[1]
point_string = args[2]

try:
    proxy = cylc_pyro_client.client( suite, pphrase, options.owner,
            options.host, options.pyro_timeout,
            options.port ).get_proxy( 'command-interface' )
    prompt( 'Kill task ' + name + ' at ' + point_string + ' in ' + suite, options.force )
    result = proxy.put( 'kill tasks', name, point_string, options.is_family )

except Exception, x:
    if cylc.flags.debug:
        raise
    sys.exit(x)

if result[0]:
    print result[1]
else:
    sys.exit( result[1] )
