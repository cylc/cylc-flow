#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC FORECAST SUITE METASCHEDULER.
#C: Copyright (C) 2008-2012 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os, sys, re
from cylc.TaskID import TaskID, TaskIDError
from cylc import cylc_pyro_client
from cylc.CylcOptionParsers import PromptOptionParser
from cylc.port_scan import SuiteIdentificationError
from cylc.registration import dbgetter, RegistrationError
from cylc.version import compat

parser = PromptOptionParser( """cylc [control] depend [options] SUITE TASK DEP

Add new dependencies on the fly to tasks in a running suite. If DEP
is a task ID the target TASK will depend on that task finishing,
otherwise DEP can be an explicit quoted message such as 
  "Data files uploaded for 2011080806" 
(presumably there will be another task in the suite, or you will insert
one, that reports that message as an output).

Prerequisites added on the fly are not propagated to the successors
of TASK, and they will not persist in TASK across a suite restart.""",
[ 'TASK                 Target task.',
  'DEP                  New dependency for the target task.' ] )

(options, args) = parser.parse_args()

if len(args) != 3:
    parser.error( "Wrong number of arguments." )

reg = parser.get_suite_name()
task_id = args[1]
dep = args[2]

dbg = dbgetter()
try:
    suite, suiterc = dbg.get_suite(reg)
except RegistrationError, x:
    raise SystemExit(x)

compat( suite, suiterc ).execute( sys.argv )

m = re.match( '^(\w+)%(\w+)$', dep )
if m:
    #name, ctime = m.groups()
    msg = dep + ' succeeded'
else:
    msg = dep
    print >> sys.stderr, 'WARNING: DEP is not a task ID, assuming prerequisite message:'
    print >> sys.stderr, msg

try:
    tid = TaskID( task_id )
except TaskIDError, x:
    raise SystemExit(x)
else:
    task_id = tid.id

try:
    proxy = cylc_pyro_client.client( suite ).get_proxy( 'remote' )
except SuiteIdentificationError, x:
    raise SystemExit(x)

if not parser.prompt( 'Add prerequisite to task ' + task_id + ' in'):
    sys.exit(0)

result = proxy.add_prerequisite( task_id, msg )

if result.success:
    print result.reason
else:
    print 'ERROR:', result.reason
    sys.exit(1)
