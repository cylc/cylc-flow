#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2014 Hilary Oliver, NIWA
#C:
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]:
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute():
        sys.exit(0)

import os
from cylc.CylcOptionParsers import cop
import cylc.flags

sys.path.append(os.path.dirname(os.path.realpath(os.path.abspath(__file__))) + '/../lib')
sys.path.append(os.path.dirname(os.path.realpath(os.path.abspath(__file__))) + '/../')

parser = cop( """cylc gui [OPTIONS] [REG]
gcylc [OPTIONS] [REG]

This is the cylc Graphical User Interface.

Local suites can be opened and switched between from within gcylc. To
connect to running remote suites (whose passphrase you have installed)
you must currently use --host and/or --user on the gcylc command line.

Available task state color themes are shown under the View menu. To
customize themes copy $CYLC_DIR/conf/gcylcrc/gcylc.rc.eg to
$HOME/.cylc/gcylc.rc and follow the instructions in the file.

To see current configuration settings use "cylc get-gui-config".""",
pyro=True, noforce=True, jset=True, argdoc=[('[REG]', 'Suite name' )])

( options, args ) = parser.parse_args()

# import modules that require gtk now, so that a display is not needed
# just to get command help (e.g. when running make on a post-commit hook
# on a remote repository).

import gtk
import warnings
warnings.filterwarnings('ignore', 'use the new', Warning)
from cylc.gui.SuiteControl import ControlApp

# Make current working directory be $HOME. Otherwise (1) if the user
# attempts to start gcylc from a CWD that has been removed, Pyro will
# not be importable below; and (2) if the CWD gets removed later while
# gcylc is running, subprocesses spawned by gcylc will fail when they
# attempt to determine their CWD.
os.chdir(os.environ['HOME'])

gtk.settings_get_default().set_long_property("gtk-toolbar-icon-size", gtk.ICON_SIZE_SMALL_TOOLBAR, "main")
gtk.settings_get_default().set_long_property("gtk-button-images", True, "main")
gtk.settings_get_default().set_long_property("gtk-menu-images", True, "main")

if len(args) == 1:
    suite = args[0]
else:
    suite = None

try:
    app = ControlApp( suite, options.db, options.owner,
            options.host, options.port, options.pyro_timeout,
            options.templatevars, options.templatevars_file )
except Exception, x:
    if cylc.flags.debug:
        raise
    raise SystemExit(x)
gtk.main()

