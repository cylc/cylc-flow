#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2013 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]: 
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute():
        sys.exit(0)

from cylc import cylc_pyro_client
from cylc.CylcOptionParsers import cop
from cylc.command_prep import prep_pyro

parser = cop( """cylc [control] nudge [OPTIONS] ARGS 

Cause the cylc task processing loop to be invoked in a running suite.

This happens automatically when the state of any task changes such that
task processing (dependency negotation etc.) is required, or if a
clock-triggered task is ready to run.

The main reason to use this command is to update the "estimated time till
completion" intervals shown in the tree-view suite control GUI, during
periods when nothing else is happening.""", pyro=True )

(options, args) = parser.parse_args()

suite, pphrase = prep_pyro( args[0], options ).execute()

try:
    proxy = cylc_pyro_client.client( suite, pphrase, options.owner,
            options.host, options.pyro_timeout, options.port,
            options.verbose ).get_proxy( 'command-interface' )
except Exception, x:
    if options.debug:
        raise
    raise SystemExit(x)

result = proxy.put( 'nudge suite' )

if result[0]:
    print result[1]
else:
    sys.exit( result[1] )

