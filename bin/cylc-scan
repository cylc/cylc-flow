#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2012 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]: 
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute():
        sys.exit(0)

from cylc.port_scan import scan
from cylc.hostname import hostname
from cylc.CylcOptionParsers import cop
from cylc.conf.CylcGlobals import pyro_base_port, pyro_port_range

parser = cop( """cylc [discover] scan [OPTIONS]
    
Detect (by port scanning) running cylc suites and lockservers, and 
print the results. The simple space-delimited output format is designed
for easy parsing: "SUITE OWNER HOST PORT".

Here's one way to parse 'cylc scan' output by shell script: 
________________________________________________________________
#!/bin/bash
# parse suite, owner, host, port from 'cylc scan' output lines
OFIS=$IFS
IFS=$'\n'; for LINE in $( cylc scan ); do 
    # split on space and assign tokens to positional parameters:
    IFS=$' '; set $LINE
    echo "$1 - $2 - $3 - $4"
done
IFS=$OFIS
----------------------------------------------------------------
"Connection Denied" indicates another user's suite.""", pyro=True, 
argdoc=[])

parser.remove_option("-p" ) # don't need passphrase
parser.remove_option("-f" ) # don't need force
parser.add_option( "--print-ports",
        help="Print cylc's configured port range.",
        action="store_true",default=False, dest="print_ports" )

( options, args ) = parser.parse_args()

if options.print_ports:
    print "cylc port range (see $CYLC_DIR/conf/CylcGlobals.py:"
    print pyro_base_port, '<= port <=', pyro_base_port + pyro_port_range
    sys.exit(0)

suites = scan( options.host, options.db, options.pyro_timeout,
               verbose=options.verbose )
