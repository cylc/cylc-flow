#!/usr/bin/env python2

# THIS FILE IS PART OF THE CYLC SUITE ENGINE.
# Copyright (C) 2008-2018 NIWA & British Crown (Met Office) & Contributors.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""cylc [prep] register [OPTIONS] ARGS

Register the name REG for the suite definition in PATH. The suite server
program can then be started, stopped, and targeted by name REG. (Note that
"cylc run" can also register suites on the fly).

Registration creates a suite run directory "~/cylc-run/REG/" containing a
".service/source" symlink to the suite definition PATH. The .service directory
will also be used for server authentication files at run time.

Suite names can be hierarchical, corresponding to the path under ~/cylc-run.

  % cylc register NAME PATH
Register PATH/suite.rc as NAME, with run directory ~/cylc-run/NAME/.

  % cylc register NAME
Register $PWD/suite.rc as NAME

  % cylc register
Register $PWD/suite.rc as $(basename $PWD).

The same suite can be registered with several names. This allows several suite
daemons, each writing to a different run directory, to execute the same suite
definition.

The command will abort if the name is already used for another suite, unless
"--redirect" is used (this is potentially dangerous because the new suite will
overwrite files in the existing run directory - consider deleting or renaming
an existing run directory rather than re-using it with another suite).

To "unregister" a suite, delete or rename its run directory (renaming it under
~/cylc-run effectively re-registers the original suite with the new name)."""


import sys
from cylc.remote import remrun
if remrun():
    sys.exit(0)

from cylc.option_parsers import CylcOptionParser as COP
from cylc.suite_srv_files_mgr import SuiteSrvFilesManager
import cylc.flags


def main():
    parser = COP(
        __doc__,
        argdoc=[("[REG]", "Suite name"),
                ("[PATH]", "Suite definition directory (defaults to $PWD)")])

    parser.add_option(
        "--redirect", help="Allow an existing suite name and run directory "
                           "to be used with another suite.",
        action="store_true", default=False, dest="redirect")

    opts, args = parser.parse_args()
    if len(args) == 2:
        reg, src = args
    elif len(args) == 1:
        reg = args[0]
        src = None
    else:
        reg = src = None
    SuiteSrvFilesManager().register(reg, src, redirect=opts.redirect)


if __name__ == "__main__":
    try:
        main()
    except Exception as exc:
        if cylc.flags.debug:
            raise
        sys.exit(str(exc))
