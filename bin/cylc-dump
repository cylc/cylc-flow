#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2013 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]: 
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute():
        sys.exit(0)

from cylc import cylc_pyro_client, dump
from cylc.CylcOptionParsers import cop
from cylc.command_prep import prep_pyro
from cylc.dump import dump_to_stdout

parser = cop( """cylc [info] dump [OPTIONS] ARGS

Print state information (e.g. the state of each task) from a running
suite. For small suites 'watch cylc [info] dump SUITE' is an effective
non-GUI real time monitor (but see also 'cylc monitor').

For more information about a specific task, such as the current state of
its prerequisites and outputs, see 'cylc [info] show'.

Examples:
 Display the state of all running tasks, sorted by cycle time:
 % cylc [info] dump --tasks --sort SUITE | grep running

 Display the state of all tasks in a particular cycle:
 % cylc [info] dump -t SUITE | grep 2010082406""", pyro=True )

parser.remove_option("-f" ) # don't need force

parser.add_option( "-g", "--global", help="Global information only.",
        action="store_true", default=False, dest="global_only" )

parser.add_option( "-t", "--tasks", help="Task states only.",
        action="store_true", default=False, dest="tasks_only" )

parser.add_option( "-s", "--sort", help="Task states only; "
        "sort by cycle time instead of name.",
        action="store_true", default=False, dest="sort_by_cycle" )

( options, args ) = parser.parse_args()

try:
    suite, pphrase = prep_pyro( args[0], options ).execute()
except:  # Trap SystemExit
    suite = args[0]
    pphrase = None

# default: display all information
display_tasks = True
display_global = True
# check for restricted output
if options.global_only and options.tasks_only:
    parser.error( '--tasks and --global are incompatible' )

if options.global_only:
    display_tasks = False
if options.tasks_only:
    display_global = False

try:
    proxy = cylc_pyro_client.client( suite, pphrase, options.owner,
            options.host, options.pyro_timeout, options.port,
            options.verbose).get_proxy('state_summary' )
except Exception, x:
    if options.debug:
        raise
    raise SystemExit(x)
# get state summary, task names, cycle times
[glbl, states, fam_states] = proxy.get_state_summary()

if display_global:
    #print 'GLOBALS:'
    for item in glbl:
        print item, '=', glbl[item]

if display_tasks:
    #print 'TASKS:'
    dump_to_stdout( states, options.sort_by_cycle )

