#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2013 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
from cylc.remote import remrun
if remrun().execute():
    sys.exit(0)

from cylc.CylcOptionParsers import cop
from cylc.version import cylc_version
from cylc.config import config
from cylc.command_prep import prep_file

parser = cop( """cylc [prep] validate [OPTIONS] ARGS

Validate a suite definition against the official specification
files held in $CYLC_DIR/conf/suiterc/.

If the suite definition uses include-files reported line numbers
will correspond to the inlined version seen by the parser; use 
'cylc view -i,--inline SUITE' for comparison.""",
    argdoc=[('REG', 'Suite name'),
            ('[TASK]', 'Task NAME%TAG: validate one task definition' )])

parser.add_option( "--strict", 
        help="Fail any use of unsafe or experimental features. "
        "Currently this just means naked dummy tasks (tasks with no "
        "corresponding runtime section) as these may result from "
        "unintentional typographic errors in task names.",
        action="store_true", default=False, dest="strict" )

(options, args) = parser.parse_args()

suite, suiterc = prep_file( args[0], options ).execute()

if options.verbose:
    print "Parsing Suite Definition"

if len(args) == 2:
    only = [args[1]]
else:
    only = None

try:
    config( suite, suiterc, 
            template_vars=options.templatevars,
            template_vars_file=options.templatevars_file,
            validation=True, strict=options.strict,
            verbose=options.verbose, only=only )
except Exception,x:
    if options.debug:
        raise
    raise SystemExit(x)

print "Suite " + suite + " is valid for cylc-" + cylc_version

