#!jinja2

title = "test all event hooks"

# simple generic handler in the suite bin dir:
{% set HANDLER = "handler.sh" %}
{% set EVNTLOG = "$CYLC_SUITE_LOG_DIR/events.log" %}

[cylc]
    [[environment]]
        EVNTLOG = {{ EVNTLOG }}
    [[reference test]]
        live mode suite timeout = 0.8
        suite shutdown event handler = log-check.sh
        expected task failures = bar.1, baz.1
 
[scheduling]
    [[dependencies]]
        graph = """
          prep => foo & bar & baz
      bar:submit-fail & baz:fail & foo => done
           done => !bar & !baz
                """
[runtime]
    [[root]]
        # make the event handler log available to gcylc:
        extra log files = {{ EVNTLOG }}
        command scripting = "true" # fast

    [[prep]]
        command scripting = """
printf "%-20s %-8s %s\n" EVENT TASK MESSAGE > $EVNTLOG
                            """
    [[foo]]
        # timeout, retry, warning, succeeded 
        retry delays = 0.01
        command scripting = """
if [[ $CYLC_TASK_TRY_NUMBER == 1 ]]; then
    false
else
    sleep 5; cylc task message -p WARNING 'this is a user-defined warning message'
fi"""
        [[[event hooks]]]
            succeeded handler = {{ HANDLER }}
            warning handler = {{ HANDLER }}
            retry handler = {{ HANDLER }}
            execution timeout = 0.01
            execution timeout handler = {{ HANDLER }}

    [[bar]]
        # submission retry and submission failed
        [[[event hooks]]]
            submission failed handler = {{ HANDLER }}
            submission retry handler = {{ HANDLER }}
        [[[job submission]]]
            retry delays = 0.01
        [[[remote]]]
            host = NOHOST

     [[baz]]
        # submitted, submission timeout, started, failed
        initial scripting = "sleep 5"
        command scripting = "false"
        [[[event hooks]]]
            submitted handler = {{ HANDLER }}
            started handler = {{ HANDLER }}
            failed handler = {{ HANDLER }}
            submission timeout = 0.01
            submission timeout handler = {{ HANDLER }}

