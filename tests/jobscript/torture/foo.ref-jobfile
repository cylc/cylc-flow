#!/bin/bash

# ++++ THIS IS A CYLC TASK JOB SCRIPT ++++
# Task 'foo.1' in suite '##suitename##'
# Job submission method: 'background'

echo "JOB SCRIPT STARTING"

export CYLC_VERSION=
test -f /etc/profile && . /etc/profile 1>/dev/null 2>&1
test -f $HOME/.profile && . $HOME/.profile 1>/dev/null 2>&1

# TRAP ERROR SIGNALS:
set -u # Fail when using an undefined variable
FAIL_SIGNALS='EXIT ERR TERM XCPU'
TRAP_FAIL_SIGNAL() {
    typeset SIGNAL=$1
    echo "Received signal $SIGNAL" >&2
    typeset S=
    for S in ${VACATION_SIGNALS:-} $FAIL_SIGNALS; do
        trap "" $S
    done
    if [[ -n ${CYLC_TASK_LOG_ROOT:-} ]]; then
        {
            echo "CYLC_JOB_EXIT=$SIGNAL"
            date -u +'CYLC_JOB_EXIT_TIME=%FT%H:%M:%S'
        } >>$CYLC_TASK_LOG_ROOT.status
    fi
    cylc task failed "Task job script received signal $@"
    exit 1
}
for S in $FAIL_SIGNALS; do
    trap "TRAP_FAIL_SIGNAL $S" $S
done
unset S

# INITIAL SCRIPTING:
echo "HELLO FROM INITIAL SCRIPTING"
# define a variable
export VAR_IS=is

# CYLC SUITE ENVIRONMENT:
export CYLC_SUITE_INITIAL_CYCLE_TIME=
export CYLC_SUITE_REG_PATH=
export CYLC_SUITE_DEF_PATH_ON_SUITE_HOST=
export CYLC_UTC=
export CYLC_DIR_ON_SUITE_HOST=
export CYLC_DEBUG=
export CYLC_SUITE_PORT=
export CYLC_MODE=
export CYLC_SUITE_FINAL_CYCLE_TIME=
export CYLC_LOCKSERVER_PORT=
export CYLC_SUITE_REG_NAME=
export CYLC_VERBOSE=
export CYLC_SUITE_NAME=
export CYLC_SUITE_HOST=
export CYLC_USE_LOCKSERVER=
export CYLC_SUITE_OWNER=
export CYLC_SUITE_LOG_DIR=
export CYLC_SUITE_WORK_DIR=
export CYLC_SUITE_SHARE_DIR=
export CYLC_SUITE_SHARE_PATH=
export CYLC_SUITE_RUN_DIR=
export CYLC_SUITE_DEF_PATH=

# CYLC TASK ENVIRONMENT:
export CYLC_TASK_ID=
export CYLC_TASK_NAME=
export CYLC_TASK_MSG_RETRY_INTVL=
export CYLC_TASK_MSG_MAX_TRIES=
export CYLC_TASK_MSG_TIMEOUT=
export CYLC_TASK_IS_COLDSTART=
export CYLC_TASK_CYCLE_TIME=
export CYLC_TASK_LOG_ROOT=
export CYLC_TASK_NAMESPACE_HIERARCHY=
export CYLC_TASK_TRY_NUMBER=
export CYLC_TASK_COMMS_METHOD=
export CYLC_TASK_SSH_LOGIN_SHELL=
export CYLC_TASK_WORK_DIR=
export CYLC_TASK_WORK_PATH=

# ACCESS TO THE SUITE BIN DIRECTORY:
export PATH=$CYLC_SUITE_DEF_PATH/bin:$PATH

# TASK RUNTIME ENVIRONMENT:
E_ONE="$( cylc util rnd 1 10 )"
E_TWO="$VAR_IS"
E_THR="$CYLC_SUITE_SHARE_PATH"
E_FOU="$CYLC_TASK_NAME"
E_FIV="$( foo.sh )"
export E_ONE E_TWO E_THR E_FOU E_FIV

# SEND TASK STARTED MESSAGE:
{
    echo "CYLC_JOB_PID=$$"
    date -u +'CYLC_JOB_INIT_TIME=%FT%H:%M:%S'
} >$CYLC_TASK_LOG_ROOT.status
cylc task started

# SHARE DIRECTORY CREATE:
mkdir -p $CYLC_SUITE_SHARE_DIR || true

# WORK DIRECTORY CREATE:
mkdir -p $(dirname $CYLC_TASK_WORK_DIR) || true
mkdir -p $CYLC_TASK_WORK_DIR
cd $CYLC_TASK_WORK_DIR

# TASK SELF-IDENTIFY:
echo "cylc Suite and Task Identity:"
echo "  Suite Name  : $CYLC_SUITE_NAME"
echo "  Suite Host  : $CYLC_SUITE_HOST"
echo "  Suite Port  : $CYLC_SUITE_PORT"
echo "  Suite Owner : $CYLC_SUITE_OWNER"
echo "  Task ID     : $CYLC_TASK_ID"
if [[ $(uname) == AIX ]]; then
    # on AIX the hostname command has no '-f' option
    echo "  Task Host   : $(hostname).$(namerslv -sn 2>/dev/null | awk '{print $2}')"
else
    echo "  Task Host   : $(hostname -f)"
fi
echo "  Task Owner  : $USER"
echo "  Task Try No.: $CYLC_TASK_TRY_NUMBER"
echo ""

# PRE-COMMAND SCRIPTING:
echo "HELLO FROM PRE-COMMAND SCRIPTING"
# initial scripting must be done:
echo VAR_IS is $VAR_IS
# user environment must be done:
echo E_ONE is $E_ONE
echo E_TWO is $E_TWO
echo E_THR is $E_THR
echo E_FOU is $E_FOU
echo E_FIV is $E_FIV
# define a variable
export VAR_PreCS=precs

# TASK COMMAND SCRIPTING:
echo "HELLO FROM COMMAND SCRIPTING"
# initial scripting must be done:
echo VAR_IS is $VAR_IS
# pre-command scripting must be done:
echo VAR_PreCS is $VAR_PreCS
# environment must be done:
echo E_ONE is $E_ONE
echo E_TWO is $E_TWO
echo E_THR is $E_THR
echo E_FOU is $E_FOU
echo E_FIV is $E_FIV
# define a variable
export VAR_CS=var_cs

# POST COMMAND SCRIPTING:
echo "HELLO FROM POST-COMMAND SCRIPTING"
# initial scripting must be done:
echo VAR_IS is $VAR_IS
# pre-command scripting must be done:
echo VAR_PreCS is $VAR_PreCS
# command scripting must be done:
echo VAR_CS is $VAR_CS
# environment must be done:
echo E_ONE is $E_ONE
echo E_TWO is $E_TWO
echo E_THR is $E_THR
echo E_FOU is $E_FOU
echo E_FIV is $E_FIV
echo VAR_IS is $VAR_IS
echo VAR_PreCS is $VAR_PreCS
echo VAR_CS is $VAR_CS
# define a variable
export VAR_PostCS=postcs

# EMPTY WORK DIRECTORY REMOVE:
cd
rmdir $CYLC_TASK_WORK_DIR 2>/dev/null || true

# SEND TASK SUCCEEDED MESSAGE:
{
    echo 'CYLC_JOB_EXIT=SUCCEEDED'
    date -u +'CYLC_JOB_EXIT_TIME=%FT%H:%M:%S'
} >>$CYLC_TASK_LOG_ROOT.status
cylc task succeeded

echo 'JOB SCRIPT EXITING (TASK SUCCEEDED)'
trap '' EXIT

#EOF
