[scheduler]
    allow implicit tasks = True
    [[events]]
        abort on stalled = True
        stalled timeout = PT30S
        abort on stalled timeout = True
[scheduling]
    cycling mode = integer
    runahead limit = P4
    initial cycle point = 1
    final cycle point = 20
    [[graph]]
        P1 = foo & run_ok => bar
        # foo fails on 1st cycle point only, succeeds on all others.
        # SoD: run_ok ensures bar spawns as waiting in 1st cycle pt, to
        # hold back the runahead.
        # As runahead limit is consecutive, even though cycle points 2 and
        # above succeed, workflow stalls after 4 cycle points.
[runtime]
    [[root]]
        script = true
    [[foo]]
        script = if [[ "$CYLC_TASK_JOB" == '1/foo/01' ]]; then false; else true; fi
