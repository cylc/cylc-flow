[scheduler]
    [[events]]
        abort on stall timeout = True
        stall timeout = PT0S
        abort on inactivity timeout = True
        inactivity timeout = PT2M
[scheduling]
    cycling mode = integer
    initial cycle point = 1
    final cycle point = 5
    [[graph]]
        R1/2 = start
        P1 = "start[2] & foo => bar"
[runtime]
    [[start]]
        script = """
# Ensure that bar.1,2 are spawned by foo.1,2 and not by start.2
# (so the scheduler must update their prereqs when start.2 finishes).
cylc__job__poll_grep_workflow_log -E "bar\.2 .* spawned"
        """
    [[foo]]
    [[bar]]
