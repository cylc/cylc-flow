[scheduler]
    [[events]]
        abort on stall timeout = True
        stall timeout = PT0S
        abort on inactivity timeout = True
        inactivity timeout = PT2M
[scheduling]
    cycling mode = integer
    initial cycle point = 1
    final cycle point = 5
    [[graph]]
        R1/2 = start
        P1 = "start[2] & foo => bar"
[runtime]
    [[start]]
        script = """
            # Ensure that 1,2/bar are spawned by 1,2/foo and not by 2/start
            # (so the scheduler must update their prereqs when 2/start finishes).
            cylc__job__poll_grep_workflow_log -E "2/bar.* added to active task pool"
        """
    [[foo]]
    [[bar]]
