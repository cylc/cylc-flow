# This workflow should behave the same as if foo.1 did not trigger foo.2.

[scheduling]
   cycling mode = integer
   initial cycle point = 1
   final cycle point = 3
   runahead limit = P0
   [[graph]]
      P1 = foo
[runtime]
   [[foo]]
      script = """
         cylc__job__wait_cylc_message_started
         if ((CYLC_TASK_CYCLE_POINT == 1)); then
            expected="foo, 1, running, not-held, not-queued, not-runahead
foo, 2, waiting, not-held, not-queued, runahead"
            diff <(cylc dump -l -t "${CYLC_WORKFLOW_ID}") <(echo "$expected")
            # Force trigger next instance while it is runahead limited.
            cylc trigger $CYLC_WORKFLOW_ID//2/foo
         fi
      """
