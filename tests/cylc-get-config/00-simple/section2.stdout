[[var_p2]]
   script = echo "RUN: run-var.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = VAR, PARALLEL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = parallel
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[OPS]]
   script = echo "RUN: run-ops.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = 
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[ops_s1]]
   script = echo "RUN: run-ops.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = OPS, SERIAL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = serial
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[ops_s2]]
   script = echo "RUN: run-ops.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = OPS, SERIAL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = serial
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[ops_p1]]
   script = echo "RUN: run-ops.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = OPS, PARALLEL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = parallel
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[ops_p2]]
   script = echo "RUN: run-ops.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = OPS, PARALLEL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = parallel
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[var_p1]]
   script = echo "RUN: run-var.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = VAR, PARALLEL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = parallel
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[VAR]]
   script = echo "RUN: run-var.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = 
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[var_s1]]
   script = echo "RUN: run-var.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = VAR, SERIAL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = serial
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[SERIAL]]
   script = echo Dummy task; sleep $(cylc rnd 1 16)
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = 
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = serial
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[root]]
   script = echo Dummy task; sleep $(cylc rnd 1 16)
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = 
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[PARALLEL]]
   script = echo Dummy task; sleep $(cylc rnd 1 16)
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = 
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = parallel
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
[[var_s2]]
   script = echo "RUN: run-var.sh"
   enable resurrection = False
   manual completion = False
   retry delays = 
   env-script = 
   execution polling intervals = 
   title = 
   extra log files = 
   work sub-directory = $CYLC_TASK_CYCLE_POINT/$CYLC_TASK_NAME
   submission polling intervals = 
   description = 
   init-script = 
   pre-script = 
   post-script = 
   inherit = VAR, SERIAL
   [[[event hooks]]]
      submission timeout handler = 
      submitted handler = 
      started handler = 
      execution timeout handler = 
      submission failed handler = 
      submission retry handler = 
      warning handler = 
      succeeded handler = 
      retry handler = 
      reset timer = False
      execution timeout = 
      failed handler = 
      submission timeout = 
   [[[environment]]]
   [[[directives]]]
      job_type = serial
   [[[environment filter]]]
      exclude = 
      include = 
   [[[dummy mode]]]
      disable pre-script = True
      disable post-script = True
      disable retries = True
      script = echo Dummy task; sleep $(cylc rnd 1 16)
      disable task event hooks = True
   [[[outputs]]]
   [[[simulation mode]]]
      run time range = 1, 16
      simulate failure = False
      disable retries = True
      disable task event hooks = True
   [[[suite state polling]]]
      interval = 
      host = 
      max-polls = 
      run-dir = 
      user = 
      verbose mode = 
   [[[remote]]]
      owner = 
      suite definition directory = 
      host = 
   [[[job submission]]]
      shell = /bin/bash
      command template = 
      method = background
      retry delays = 
