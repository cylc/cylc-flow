
title = "test suite for broadcast functionality"

description = """
The initial prep task in this suite broadcasts an environment variable
"BCAST" to various cycles and namespaces, then each task writes its cycle
time, name, and its value of BCAST to a special log file. Finally, the
shutdown event handler compares the broadcast log file with a previously
generated reference version.
              """

[cylc]
    [[reference test]]
        live mode suite timeout = 2.0
        suite shutdown event handler = complog.py

[scheduling]
    initial cycle time = 2010080800
    final cycle time   = 2010080900
    [[special tasks]]
        start-up = prep
    [[dependencies]]
        [[[0]]]
            graph = """
           prep => foo => bar & baz & qux & wibble => ENS
           ENS:finish-all => wobble
                    """
[runtime]
    [[root]]
        pre-command scripting = "echo $CYLC_TASK_CYCLE_TIME $CYLC_TASK_NAME BCAST is $BCAST | tee -a $BCASTLOG"
        command scripting = "true" # no sleep
        [[[environment]]]
            BCAST = ${BCAST:-(not set)}
            BCASTLOG = ${CYLC_SUITE_DEF_PATH}/broadcast.log
    [[prep]]
        pre-command scripting = "rm -f $BCASTLOG"
        command scripting = """
    # broadcast to all cycles and namespaces:
        cylc broadcast -s "[environment]BCAST = ROOT" $CYLC_SUITE_REG_NAME
    # broadcast to foo%2010080800:
        cylc broadcast -t 2010080800 -n foo -s "[environment]BCAST = FOO" $CYLC_SUITE_REG_NAME
    # broadcast to bar at all cycles:
        cylc broadcast -n bar -s "[environment]BCAST = BAR" $CYLC_SUITE_REG_NAME
    # broadcast to baz at 2010080900:
        cylc broadcast -n baz -t 2010080900 -s "[environment]BCAST = BAZ" $CYLC_SUITE_REG_NAME
    # broadcast to qux at 2010080900, then cancel it:
        cylc broadcast -n qux -t 2010080900 -s "[environment]BCAST = QUX" $CYLC_SUITE_REG_NAME
        cylc broadcast -n qux -t 2010080900 --cancel "[environment]BCAST" $CYLC_SUITE_REG_NAME
    # broadcast to wibble at all cycles, then clear it:
        cylc broadcast -n wibble -s "[environment]BCAST = WIBBLE" $CYLC_SUITE_REG_NAME
        cylc broadcast -n wibble --clear $CYLC_SUITE_REG_NAME
    # broadcast to all members of ENS, all cycles:
        cylc broadcast -n ENS -s "[environment]BCAST = ENS" $CYLC_SUITE_REG_NAME
    # broadcast to all members of ENS1, all cycles:
        cylc broadcast -n ENS1 -s "[environment]BCAST = ENS1" $CYLC_SUITE_REG_NAME
    # broadcast to a single member m2 of ENS1, in 2010080900:
        cylc broadcast -n m2 -t 2010080900 -s "[environment]BCAST = M2" $CYLC_SUITE_REG_NAME
    # cancel broadcast to m4 of ENS1, in 2010080900 (will not work):
        cylc broadcast -n m4 -t 2010080900 --cancel "[environment]BCAST" $CYLC_SUITE_REG_NAME
    # cancel broadcast to m5 of ENS1 at all cycles (will not work):
        cylc broadcast -n m5 --cancel "[environment]BCAST" $CYLC_SUITE_REG_NAME
    # clear broadcast to m6 of ENS1 at all cycles (will not work):
        cylc broadcast -n m6 --clear $CYLC_SUITE_REG_NAME
    # clear, then reset, broadcast to m7 of ENS1 at all cycles:
        cylc broadcast -n m7 --clear $CYLC_SUITE_REG_NAME
        cylc broadcast -n m7 -s "[environment]BCAST = M7" $CYLC_SUITE_REG_NAME
    # reset broadcast to m8 of ENS1 at 2010080900
        cylc broadcast -n m8 -s "[environment]BCAST = M8" $CYLC_SUITE_REG_NAME
    # reset broadcast to m9 of ENS1 at all cycles
        cylc broadcast -n m9 -s "[environment]BCAST = M9" $CYLC_SUITE_REG_NAME
    # clear broadcast for ENS3 (will not work):
        cylc broadcast -n ENS3 --clear $CYLC_SUITE_REG_NAME
    # list the result to prep task stdout:
        cylc bcast --display $CYLC_SUITE_REG_NAME
                            """
    [[ENS]]
    [[ENS1]]
        inherit = ENS
    [[m1,m2,m3,m4,m5,m6,m7,m8,m9]]
        inherit = ENS1
    [[ENS2]]
        inherit = ENS
    [[n1]]
        inherit = ENS2
    [[ENS3]]
        inherit = ENS
    [[o1]]
        inherit = ENS3
