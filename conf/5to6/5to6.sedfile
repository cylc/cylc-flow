# THIS FILE IS PART OF THE CYLC SUITE ENGINE.
# Copyright (C) 2008-2016 NIWA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------------
# Sed command file for the 5 to 6 cylc suite.rc syntax transformer tool.
#
#
# Convert 'cycle time' to 'cycle point'.
s/^\( *\)\(initial\|final\) cycle time *= *\(.*\)/\1\2 cycle point = \3 # UPGRADE CHANGE: ISO 8601, 'time' -> 'point'/g
#
# Convert 'cycle point' to use ISO 8601 date-time notation.
s/^\( *\)\(initial\|final\) cycle point = \([0-9]\{8\}\)\([0-9][0-9].*\)/\1\2 cycle point = \3T\4/g
#
# Convert hourly cycling sections: e.g. [[[0]]] to [[[T00]]], [[[ 0, 12 ]]] to [[[T00, T12]]].
/^ *\[\[\[[0-9, ]\+\]\]\]/{s/\([0-9]\+\)/T\1/g; s/T\([0-9]\)\b/T0\1/g; s@$@ # UPGRADE CHANGE: ISO 8601-like recurrence abbreviations@g}
#
# Warn for daily cycling sections.
s/^\( *\)\(\[\[\[ *Daily *( *[0-9]\+ *, *\)\([0-9]\+\)\( *) *\]\]\].*\)/\1\2\3\4 # UPGRADE INFO: manually convert. [[[P\3D]]]?\n\1    # UPGRADE INFO: change any mistaken [-PTnH] to [-PnD]./g
#
# Warn for monthly cycling sections.
s/^\( *\)\(\[\[\[ *Monthly *( *[0-9]\+ *, *\)\([0-9]\+\)\( *) *\]\]\].*\)/\1\2\3\4 # UPGRADE INFO: manually convert. [[[P\3M]]]?\n\1    # UPGRADE INFO: change any mistaken [-PTnH] to [-PnM]./g
#
# Warn for yearly cycling sections.
s/^\( *\)\(\[\[\[ *Yearly *( *[0-9]\+ *, *\)\([0-9]\+\)\( *) *\]\]\].*\)/\1\2\3\4 # UPGRADE INFO: manually convert. [[[P\3Y]]]?\n\1    # UPGRADE INFO: change any mistaken [-PTnH] to [-PnY]./g
#
# Warn for hardcoded cycler.
/^ *cycling *= [A-Z][A-Za-z]\+ *$/{
    s/= *\([A-Z][A-Za-z]\+ *$\)/= \1  # UPGRADE INFO: change [[[m,n]]] dependency sections to [[[\1(m,n)]]] and re-run cylc 5to6./g; :foo; n; bfoo; q;
}
#
# Convert hourly offsets in the graph text: [T-6] to [-PT6H], etc.
/\[T[-+][0-9]\+\]/{s/\[T\([-+]\)\([0-9]\+\)\]/[\1PT\2H\]/g; s/$/ # UPGRADE CHANGE: offset as ISO 8601 duration (assume hourly cycling)/g}
#
# Convert options that end with the word "timeout" to minute info: e.g. 6 -> PT6M.
s/^\(.*\) timeout *= *\([0-9.]\+\)/\1 timeout = PT\2M # UPGRADE CHANGE: ISO 8601 durations/g
#
# Convert the runahead limit to be in hours: e.g. 12 -> PT12H.
s/^\( *\)runahead limit *= *\([0-9]\+\)/\1runahead limit = PT\2H # UPGRADE CHANGE: ISO 8601 cycle duration/g
#
# Convert each item in retry delays to be in minutes: e.g. 5, 2*30 to PT5M, 2*PT30M.
/^ *retry delays *= [0-9*. ,]\+/{s/\([0-9]\+\*\)\{0,1\}\([0-9.]\+\)/\1PT\2M/g; s/$/ # UPGRADE CHANGE: delays as ISO 8601 durations/g}
#
# Convert each item in *polling intervals to be in minutes: e.g. 5, 2*30 to PT5M, 2*PT30M.
/polling intervals *= *[0-9*. ,]\+/{s/\([0-9]\+\*\)\{0,1\}\([0-9.]\+\)/\1PT\2M/g; s/$/ # UPGRADE CHANGE: intervals as ISO 8601 durations/g}
#
# Create a warning for the use of start-up tasks.
/^ *start-up *=/{s@$@ # UPGRADE INFO: Replace this and *all* start-up/async graph deps with *cylc 6* 'cylc validate' 'R1*' output@g}
#
# Convert the suite state polling interval into seconds: e.g. 5 => PT5S
s/^\( *\)interval *= *\([0-9.]\+\)/\1interval = PT\2S # UPGRADE CHANGE: ISO 8601 durations/g
#
# Tidy up unnecessary decimals: PT60.0M to PT60M.
s/PT\([0-9]\+\)\.0\([HMS]\)/PT\1\2/g
#
# Tidy up units (to impress the users!).
s/PT60M/PT1H/g
s/PT120M/PT2H/g
s/PT180M/PT3H/g
s/PT240M/PT4H/g
s/PT300M/PT5H/g
s/PT360M/PT6H/g
s/PT420M/PT7H/g
s/PT480M/PT8H/g
s/PT540M/PT9H/g
s/PT600M/PT10H/g
s/PT660M/PT11H/g
s/PT720M/PT12H/g
s/PT780M/PT13H/g
s/PT840M/PT14H/g
s/PT900M/PT15H/g
s/PT960M/PT16H/g
s/PT1020M/PT17H/g
s/PT1080M/PT18H/g
s/PT1140M/PT19H/g
s/PT1200M/PT20H/g
s/PT1260M/PT21H/g
s/PT1320M/PT22H/g
s/PT1380M/PT23H/g
s/PT1440M/P1D/g
s/PT2880M/P2D/g
s/PT4320M/P3D/g
s/PT24H/P1D/g
s/PT48H/P2D/g
s/PT72H/P3D/g
