#>______________________________________________________________________
#> This is a ConfigObj configspec for cylc site and user configuration.
#> All legal configuration items and default values are defined below. 
#>----------------------------------------------------------------------
#> HOW TO CUSTOMIZE SETTINGS FOR YOUR SITE:
#>   *** Do not modify this configspec file ***
#>   (1) Run "cylc get-global-config --write-site" to generate the file
#>       $CYLC_DIR/conf/site.rc with all default settings commented out.
#>   (2) UNCOMMENT and modify specific configuration items as required.
#>----------------------------------------------------------------------
#> HOW TO CUSTOMIZE SETTINGS FOR AN INDIVIDUAL USER:
#>   *** Do not modify this configspec file ***
#>   (1) Run "cylc get-global-config --write-user" to generate the file 
#>       $HOME/.cylc/cylc.rc with all default settings commented out.
#>   (2) UNCOMMENT and modify specific configuration items as required.
#>----------------------------------------------------------------------
#>   NOTE THAT SITE AND/OR USER CONFIG IS REQUIRED ON TASK HOSTS TOO 
#> TODO: document exactly for what purpose
#>----------------------------------------------------------------------
#> Comments starting with "#>" are not passed on to generated .rc files.
#>----------------------------------------------------------------------
# Sections or items preceded by "# SITE ONLY" can not be set by users.
#> (trailing comments would be better markers but they don't get passed
#> through from the configspec to generated config files)
#-----------------------------------------------------------------------
# Items that are unset by default are shown below, commented out, with 
# a value of 'None' - this is not a valid way off unsetting an item in
# reality - instead just leave the item commented out.
#-----------------------------------------------------------------------

# A temporary directory is needed by a few cylc commands. Leave it unset
# to get the default system temporary directory (usually $TMPDIR).
# Cylc temporary directories are automatically cleaned up on exit.
temporary directory = string( default=None )

# A rolling archive of suite state dumps is maintained for restarts.
state dump rolling archive length = integer( min=1, default=10 )

# Commands that intervene in running suites can ask for confirmation
# before acting. Some find this annoying and ineffective as a safety
# measure, however, so command prompts are disabled by default.
disable interactive command prompts = boolean( default=True )

# Task messaging settings apply to the "cylc task COMMAND" commands 
# used by running tasks to communicate with their parent suite. If a
# message send fails after the configured number of tries the task will 
# carry on regardless.
[task messaging]
    retry interval in seconds = float( min=1, default=30 )
    maximum number of tries = integer( min=1, default=10 )

    # This timeout is the same as --pyro-timeout for user commands.
    # If set to None (no timeout) a non-responsive suite (e.g. suspended
    # with Ctrl-Z) could cause a task to hang indefinitely when it
    # attempts to send a message to the suite.
# TODO set a finite by large default connection timeout:
    connection timeout in seconds = float( min=1, default=None )

# suites logs go under the suite run directory (see below)
[suite logging]
    roll over at start-up = boolean( default=True )
    rolling archive length = integer( min=1, default=5 )
    maximum size in bytes = integer( min=1000, default=1000000 )

# The "cylc doc" command and GUI Help menus need the following items.
[documentation]

    # Documentation files that come with the cylc release tarball.
# SITE ONLY
    [[files]]
        html index = string( default="$CYLC_DIR/doc/index.html" )
        pdf user guide = string( default="$CYLC_DIR/doc/pdf/cug-pdf.pdf" )
        multi-page html user guide = string( default="$CYLC_DIR/doc/html/multi/cug-html.html" )
        single-page html user guide = string( default="$CYLC_DIR/doc/html/single/cug-html.html" )

    # Documentation URLs:
    [[urls]]

        # The cylc homepage links to documentation for the latest release.
# SITE ONLY
        internet homepage = string( default="http://cylc.github.com/cylc/" )

        # You may want to copy the docs for access via a local web server.
        local index = string( default=None )

# PDF and HTML viewers can be launched by cylc to view documentation.
[document viewers]
    pdf = string( default="evince" )
    html = string( default="firefox" )

# Configure your favourite text editor for editing suite definitions.
[editors]
    # Examples:
    #  + vim           # vim in-terminal
    #  + gvim -f       # (-f is required for "cylc edit --inline")
    #  + xterm -e vim  # in-terminal as a proxy for a GUI editor
    #  + emacs         # emacs GUI
    #  + emacs -nw     # emacs in-terminal 
    terminal = string( default="vim" )
    gui         = string( default="gvim -f" )

# Pyro is used by cylc for network communications.
[pyro]

    # Each suite listens on a dedicated network port.
    # Servers bind on the first port available from the base port up:
# SITE ONLY
    base port = integer( default=7766 )

    # This sets the maximum number of suites that can run at once.
# SITE ONLY
    maximum number of ports = integer( default=100 )

    # Port numbers are recorded in this directory, by suite name.
    ports directory = string( default="$HOME/.cylc/ports/" )

# The [hosts] section configures host-specific settings for the suite
# host ('localhost') and remote task hosts. Local settings are used as
# default values for task hosts (for directory paths the local home
# directory will be replaced with literal '$HOME' for evaluation on the
# remote host) so specific task hosts only need to be mentioned here if
# you need to override the defaults.
[hosts]

    # The default task host is the suite host, i.e. localhost:
    # Add task host sections if local defaults are not sufficient.
    [[localhost]]

        # Top level for suite output logs of various kinds:
        run directory  = string( default="$HOME/cylc-run" )

        # Top level for suite work and share directories:
        work directory = string( default="$HOME/cylc-run" )

        # Cylc installed location, leave unset if cylc is in $PATH:
        cylc bin directory = string( default=None )

        # Re-invoke task messaging commands on the suite host
        # instead of using Pyro-based RPC across the network:
        use ssh messaging = boolean( default=False )

        # How to invoke commands on this host; default shown (not used
        # on localhost unless you run tasks under another user account):
        remote shell template = string( default='ssh -oBatchMode=yes %s' )

        # Use a login shell or not for remote command invocation. By
        # default cylc submits remote ssh commands using a login shell,
        #   ssh user@host 'bash --login cylc ...'
        # which will source /etc/profile and ~/.profile to set up the
        # user environment.  However, for security reasons some
        # institutions do not allow unattended commands to start login
        # shells, so you can turn off this behaviour to get,
        #   ssh user@host 'cylc ...'
        # this will use the default shell on the remote machine,
        # sourcing ~/.bashrc (or ~/.cshrc) to set up the environment.
        # In either case the PATH environment variable on the remote
        # machine should include $CYLC_DIR/bin in order for the cylc
        # executable to be found (or else use "cylc directory" above).
        # NOTE: this setting does not currently apply to job submission
        # commands (executing on the suite host to submit remote tasks).
        use login shell = boolean( default=True )

    #> Here's the __many__ configspec for available remote task hosts:
    [[__many__]]
        run directory  = string( default=None )
        work directory = string( default=None)
        cylc directory = string( default=None )
        use ssh messaging = boolean( default=None )
        remote shell template = string( default=None )
        use login shell = boolean( default=True )

# SUITE HOST SELF-IDENTIFICATION: The suite host's identity, by NAME or
# IP ADDRESS, must be determined locally by cylc and passed to task
# execution environments as $CYLC_SUITE_HOST so that tasks can send
# messages back.  If name is used, the host name determined on the suite
# host must resolve, on the task host, to the external IP address of the
# suite host. Otherwise the external IP address of the suite host, as
# seen by the task host, must be determined on the suite host, which is
# not always easy to do.  Cylc requires a special "target address" to do
# this; see documentation in $CYLC_DIR/lib/cylc/suite_host.py for why.
# (TO DO: is it conceivable that different remote task hosts at the same
# site might see the suite host differently? If so we would need to be
# able to override the target in suite definitions.)
[suite host self-identification]

    # Method: "name", "address", or "hardwired"
    method = option( "name", "address", "hardwired", default="name" ) 

    # Target: if your suite host sees the internet a common address such
    # as 'google.com' will do; otherwise choose a host on your intranet.
    target = string( default="google.com" )

    # For the hardwired method, put the host name or IP address here:
    host = string( default=None )

